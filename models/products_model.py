from database.db import conectar

def criar_tabela():
    conn = conectar()
    cursor = conn.cursor()

    # Verifica se a tabela já existe e a exclui
    cursor.execute("""
        BEGIN
            EXECUTE IMMEDIATE 'DROP TABLE produtos';
        EXCEPTION
            WHEN OTHERS THEN
                NULL; -- ignora erro se a tabela não existir
        END;
    """)

    # Criação da tabela
    cursor.execute("""
        CREATE TABLE produtos (
            idProduto NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            nome VARCHAR2(255) NOT NULL,
            preco NUMBER(10, 2) NOT NULL
        )
    """)
    conn.commit()
    conn.close()



def inserir_produtos(nome, preco):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("""
        INSERT INTO produtos (nome, preco)
        VALUES (:nome, :preco)
    """, {'nome': nome, 'preco': preco})
    conn.commit()
    conn.close()

def listar_produtos():
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM produtos")
    produtos = cursor.fetchall()
    conn.close()
    return produtos

def excluir_produtos(idProduto):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM produtos WHERE idProduto = :idProduto", {'idProduto': idProduto})
    conn.commit()
    conn.close()

def buscar_produtos_por_id(idProduto):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM produtos WHERE idProduto = :idProduto", {'idProduto': idProduto})
    produto = cursor.fetchone()
    conn.close()
    return produto

def atualizar_produto(idProduto, nome, preco):
    conn = conectar()
    cursor = conn.cursor()
    cursor.execute("""
        UPDATE produtos
        SET nome = :nome, preco = :preco
        WHERE idProduto = :idProduto
    """, {'nome': nome, 'preco': preco, 'idProduto': idProduto})
    conn.commit()
    conn.close()